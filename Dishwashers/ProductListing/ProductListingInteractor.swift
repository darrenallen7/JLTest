//
//  ProductListingInteractor.swift
//  Dishwashers
//
//  Created by Darren Allen on 19/06/2018.
//  Copyright (c) 2018 Swift7Media. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import Foundation

protocol ProductListingInteractorInput
{
    func getProducts()
}

class ProductListingInteractor: ProductListingInteractorInput
{
    var output: ProductListingPresenterInput?
    var worker: ProductListingWorkerTasks
    var apiManager = APIManager.sharedInstance

    required init(worker: ProductListingWorkerTasks = ProductListingWorker())
    {
        self.worker = worker
    }
    
    func getProducts()
    {
        apiManager.retrieveProducts { (products, count, error) in
            if let returnedProducts = products, let productCount = count, error == nil
            {
                self.output?.presentProducts(products: returnedProducts, count: productCount)
            }
            else
            {
                self.output?.presentRetrievalError()
            }
        }
    }

    // MARK: - Business logic
}
